{"expireTime":9007200836012273000,"key":"transformer-remark-markdown-html-05b19a56abafddcda7736f7058b97f6f-gatsby-remark-relative-imagesgatsby-remark-imagesgatsby-remark-lazy-loadgatsby-remark-prismjs-","val":"<h1>API REST</h1>\n<h3>Fluxo de uma requisição e resposta:</h3>\n<ul>\n<li>A requisição é feita por um cliente</li>\n<li>É retornada uma resposta através de uma estrutura de dados</li>\n<li>O cliente recebe a resposta e processa o resultado</li>\n</ul>\n<h3>Métodos utilizados:</h3>\n<ul>\n<li>GET - Receber/Exibir uma informação</li>\n<li>POST - Criar uma informação</li>\n<li>PUT - Alterar uma informação</li>\n<li>DELETE - Deletar uma informação</li>\n</ul>\n<p><a href=\"http://minhaapi.com/users/1\">http://minhaapi.com/users/1</a></p>\n<p><strong>users</strong> - É o recurso/rota</p>\n<p><strong>1</strong> - É o parâmetro que especifica qual recurso será alterado ou deletado</p>\n<h3>HTTP Codes</h3>\n<blockquote>\n<p>Toda resposta que o backend retorna para o frontend é acompanhada de um código que é o HTTP codes. Toda resposta que o backend retorna para o frontend é acompanhada de um código que é o HTTP codes. Toda resposta que o backend retorna para o frontend é acompanhada de um código que é o HTTP codes</p>\n</blockquote>\n<ul>\n<li>\n<p>Código de 3 dígitos numéricos xxx que indica qual é o status daquela resposta</p>\n<ul>\n<li>Se inicia com 1xx - Informativo</li>\n<li>Se inicia com 2xx - Sucesso</li>\n<li>200 - SUCESS</li>\n<li>201 - CREATED</li>\n<li>Se inicia com 3xx - Redirecionamento</li>\n<li>Se inicia com 4xx - Client Error (algo está faltando na requisição, parâmetros por exemplo)</li>\n<li>400 - BAD REQUEST</li>\n<li>401 - UNAUTHORIZED</li>\n<li>404 - NOT FOUND</li>\n<li>Se inicia com 5xx - Server Error (ocorreu algum erro no servidor, não conseguindo levar a requisição para o frontend)</li>\n<li>500 - INTERNAL SERVER ERROR</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Profile <span class=\"token keyword\">from</span> <span class=\"token string\">'../Profile/index'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SocialLinks <span class=\"token keyword\">from</span> <span class=\"token string\">'../SocialLinks'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MenuLinks <span class=\"token keyword\">from</span> <span class=\"token string\">'../MenuLinks'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SidebarWrapper <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./style'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Sidebar</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SidebarWrapper</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Profile</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SocialLinks</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MenuLinks</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SidebarWrapper</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Sidebar<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Route params x Query params x Request body</h3>\n<ul>\n<li>\n<p>Query params - parâmetros que são passados após o <strong>?</strong> e que o parâmetro é nomeado</p>\n<ul>\n<li>?user=1</li>\n</ul>\n</li>\n<li>\n<p>Route params - parâmetros para acessar uma rota apenas</p>\n<ul>\n<li>/users/1 (usuário com id 1)</li>\n</ul>\n</li>\n<li>Request body - conteúdo que vem dentro das rotas de PUT e POST</li>\n</ul>"}