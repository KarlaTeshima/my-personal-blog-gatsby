{"version":3,"sources":["webpack:///./src/components/PostItem/style.js","webpack:///./src/components/PostItem/index.js","webpack:///./node_modules/@styled-icons/material/ArrowBackIos/ArrowBackIos.esm.js","webpack:///./node_modules/@styled-icons/material/ArrowForwardIos/ArrowForwardIos.esm.js","webpack:///./src/components/Pagination/style.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/templates/blog-list.js"],"names":["PostItemLink","styled","Link","PostItemWrapper","section","PostItemTag","div","props","background","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","ArrowBackIos","ref","iconAttrs","iconVerticalAlign","iconViewBox","d","key","fill","displayName","ArrowForwardIos","PaginationWrapper","ArrowLeft","ArrowRight","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","query","BlogList","postList","data","allMarkdownRemark","edges","pageContext","Layout","map","node","frontmatter","fields"],"mappings":"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","file":"component---src-components-templates-blog-list-js-b27855cebdc1e227b285.js","sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nexport const PostItemLink = styled(Link)`\n  color: #f8f8f8;\n  display: flex;\n  text-decoration: none;\n  &:hover {\n    color: #f7a5a6;\n  }\n`;\n\nexport const PostItemWrapper = styled.section`\n  border-bottom: 1px solid #f7a5a6;\n  padding: 2rem 2rem;\n  width: 100%;\n`;\n\nexport const PostItemTag = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 3px;\n  background: ${props => (props.background ? props.background : '#f7a5a6')};\n  color: #fff;\n  font-size: 1.3rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  margin-left: 1.5rem;\n  margin-bottom: 15px;\n  flex-basis: auto;\n  width: 90px;\n  height: 40px;\n`;\n\nexport const PostItemInfo = styled.div`\n  flex-direction: column;\n  margin-left: 1.5rem;\n`;\n\nexport const PostItemDate = styled.time`\n  font-size: 0.9rem;\n  line-height: 1.2;\n`;\n\nexport const PostItemTitle = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 700;\n  margin: 0.2rem 0 0.5rem;\n`;\n\nexport const PostItemDescription = styled.p`\n  font-size: 1.2rem;\n  font-weight: 300;\n  line-height: 1.2;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  PostItemLink,\n  PostItemWrapper,\n  PostItemTag,\n  PostItemInfo,\n  PostItemDate,\n  PostItemTitle,\n  PostItemDescription\n} from './style';\n\nconst PostItem = ({\n  slug,\n  category,\n  date,\n  timeToRead,\n  title,\n  description,\n  background\n}) => (\n  <PostItemLink to={slug}>\n    <PostItemWrapper>\n      <PostItemTag background={background}>{category}</PostItemTag>\n\n      <PostItemInfo>\n        <PostItemDate>\n          {date} • {timeToRead} min de leitura\n        </PostItemDate>\n        <PostItemTitle>{title}</PostItemTitle>\n        <PostItemDescription>{description}</PostItemDescription>\n      </PostItemInfo>\n    </PostItemWrapper>\n  </PostItemLink>\n);\n\nPostItem.propTypes = {\n  slug: PropTypes.string.isRequired,\n  background: PropTypes.string,\n  category: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeToRead: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\n\nexport default PostItem;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ArrowBackIos = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\",\n    key: \"k0\"\n  }), React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\",\n    key: \"k1\"\n  }));\n});\nArrowBackIos.displayName = 'ArrowBackIos';\nexport var ArrowBackIosDimensions = {\n  height: 24,\n  width: 24\n};","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ArrowForwardIos = React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return React.createElement(StyledIconBase, __assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), React.createElement(\"path\", {\n    d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\",\n    key: \"k0\"\n  }), React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0z\",\n    key: \"k1\"\n  }));\n});\nArrowForwardIos.displayName = 'ArrowForwardIos';\nexport var ArrowForwardIosDimensions = {\n  height: 24,\n  width: 24\n};","import styled from 'styled-components';\nimport { ArrowBackIos } from 'styled-icons/material/ArrowBackIos';\nimport { ArrowForwardIos } from 'styled-icons/material/ArrowForwardIos';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-top: 1px solid #f7a5a6;\n  color: #fff;\n  padding: 1.5rem 3rem;\n\n  a {\n    color: #f7a5a6;\n    text-decoration: none;\n    transition: color 0.5s;\n    cursor: pointer;\n\n    &:hover {\n      color: #fff;\n    }\n  }\n\n  p {\n    color: #f7a5a6;\n  }\n`;\n\nexport const ArrowLeft = styled(ArrowBackIos)`\n  color: #f7a5a6;\n  width: 12px;\n  margin-right: 5px;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\nexport const ArrowRight = styled(ArrowForwardIos)`\n  color: #f7a5a6;\n  width: 12px;\n  margin-left: 5px;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport propTypes from 'prop-types';\n\nimport { PaginationWrapper, ArrowLeft, ArrowRight } from './style';\n\nconst Pagination = ({\n  isFirst,\n  isLast,\n  currentPage,\n  numPages,\n  prevPage,\n  nextPage\n}) => (\n  <PaginationWrapper>\n    {!isFirst && (\n      <Link to={prevPage}>\n        <ArrowLeft /> página anterior\n      </Link>\n    )}\n    <p>\n      {currentPage} de {numPages}\n    </p>\n    {!isLast && (\n      <Link to={nextPage}>\n        próxima página\n        <ArrowRight />\n      </Link>\n    )}\n  </PaginationWrapper>\n);\n\nPagination.propTypes = {\n  isFirst: propTypes.bool.isRequired,\n  isLast: propTypes.bool.isRequired,\n  currentPage: propTypes.number.isRequired,\n  numPages: propTypes.number.isRequired,\n  prevPage: propTypes.string,\n  nextPage: propTypes.string\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../Layout';\nimport SEO from '../seo.js';\nimport PostItem from '../PostItem';\nimport Pagination from '../Pagination';\n\nconst BlogList = props => {\n  const postList = props.data.allMarkdownRemark.edges;\n\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}`;\n  const nextPage = `/page/${currentPage + 1}`;\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      {postList.map(\n        ({\n          node: {\n            frontmatter: { category, date, description, title },\n            timeToRead,\n            fields: { slug }\n          }\n        }) => (\n          <PostItem\n            slug={slug}\n            category={category}\n            date={date}\n            timeToRead={timeToRead}\n            title={title}\n            description={description}\n          />\n        )\n      )}\n\n      <Pagination\n        isFirst={isFirst}\n        isLast={isLast}\n        currentPage={currentPage}\n        numPages={numPages}\n        prevPage={prevPage}\n        nextPage={nextPage}\n      />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            category\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\n            description\n            title\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogList;\n"],"sourceRoot":""}